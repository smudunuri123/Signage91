plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "com.google.protobuf"
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk 33
    compileSdkExtension 4

    defaultConfig {
        applicationId "com.app.signage91"
        minSdk 21
        targetSdk 33
        versionCode 2
        versionName "1.0.2"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    allprojects {
        gradle.projectsEvaluated {
            tasks.withType(JavaCompile) {
                options.compilerArgs << "-Xmaxerrs" << "1000"
            }
        }
    }
    dexOptions{
        javaMaxHeapSize "16g"
    }

    sourceSets{
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        main.proto.srcDirs += 'src/main/proto'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.firebase:firebase-crashlytics:18.2.9'
    implementation 'com.google.firebase:firebase-analytics:20.1.2'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.devbrackets.android:exomedia:4.3.0'
    implementation 'com.devbrackets.android:playlistcore:2.1.0'

    // ExoPlayer
    implementation "com.google.android.exoplayer:extension-okhttp:2.17.1"
    implementation 'com.google.android.exoplayer:exoplayer:2.17.1'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.17.1'
    implementation 'com.google.android.exoplayer:exoplayer-dash:2.17.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.17.1'


    implementation 'com.google.android.exoplayer:exoplayer:r2.17.1'
    implementation 'com.google.android.exoplayer:exoplayer-core:r2.17.1'
    implementation 'com.google.android.exoplayer:exoplayer-dash:r2.17.1'
    implementation 'com.google.android.exoplayer:exoplayer-hls:r2.17.1'
    implementation 'com.google.android.exoplayer:exoplayer-smoothstreaming:r2.17.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:r2.17.1'
    // Glide to load images from URL & URI
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.0'
    implementation 'com.amitshekhar.android:jackson-android-networking:1.0.2'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    //gson converter factory
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation 'com.google.code.gson:gson:2.9.0'

    //Couroutine
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'

    //xml converter
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation('com.squareup.retrofit2:converter-simplexml:2.9.0') {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }
    implementation 'com.amitshekhar.android:android-networking:1.0.2'
//    implementation files('libs/YoutubeAndroidPlayerApi.jar')
    implementation 'org.jsoup:jsoup:1.15.1'
    // dependency for slider view
    implementation 'com.github.smarteist:autoimageslider:1.3.9'

    implementation "javax.annotation:javax.annotation-api:$javaxAnnotationVersion"
    implementation "io.grpc:grpc-okhttp:$grpcVersion"
    implementation "io.grpc:grpc-protobuf-lite:$grpcVersion"
    implementation "io.grpc:grpc-stub:$grpcVersion"


    //kotpref
    implementation 'com.chibatching.kotpref:kotpref:2.13.1'
    implementation 'com.chibatching.kotpref:initializer:2.13.1'
    // optional
    implementation 'com.chibatching.kotpref:enum-support:2.13.1'
    // optional
    implementation 'com.chibatching.kotpref:gson-support:2.13.1'

    //app restart
    implementation 'com.jakewharton:process-phoenix:2.1.2'

    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.work:work-rxjava2:$work_version"
    implementation "androidx.work:work-gcm:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"
    implementation "androidx.work:work-multiprocess:$work_version"

    implementation "android.lib.verticalmarqueetextview:VerticalMarqueeTextView:1.0.2"

    //room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.0.1')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation 'androidx.multidex:multidex:2.0.1'
    implementation group: 'com.flipkart.zjsonpatch', name: 'zjsonpatch', version: '0.2.1'
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.20.1' }
    plugins {
        grpc { artifact = 'io.grpc:protoc-gen-grpc-java:1.50.0' }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins{
                java { option 'lite' }
            }
            task.plugins {
                grpc { option 'lite' }
            }
        }
    }
}
